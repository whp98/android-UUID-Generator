name: Android CI RELEASE

# 触发器
on:
  push:
    tags:
      - v*
  pull_request:
    tags:
      - v*

jobs:
  build:

    runs-on: ubuntu-latest
    # 设置jdk环境为1.8
    steps:
      - uses: actions/checkout@v4
      - name: set up JDK 17
        uses: actions/setup-java@v1
        with:
          java-version: 17
      # 获取打包秘钥
      - name: Checkout Android Keystore
        uses: actions/checkout@v4
        with:
          repository: whp98/SignKey
          token: ${{ secrets.TOKEN }} # 连接仓库的token,需要单独配置
          path: androidSign # 仓库的根目录名
      # 使用tag号刷新version
      - name: Get Version File Content
        uses: actions/github-script@v3
        id: get-version-file-content
        with:
          script: |
            const str=process.env.GITHUB_REF;
            const time = parseInt(new Date().getTime()/1000);
            const tag = str.substring(str.indexOf("v"));
            const res = `versionCode=${time}
            versionName=${tag}`;
            return res;
          result-encoding: string
      - name: version file overwrite
        run: echo "${{steps.get-version-file-content.outputs.result}}" > ./version.properties
      # 打包release
      - name: Build with Gradle
        run: bash ./gradlew clean assembleRelease bundleRelease
      # 创建release
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.TOKEN }}
          #GitHub 会自动创建 GITHUB_TOKEN 密码以在工作流程中使用。
          #您可以使用 GITHUB_TOKEN 在工作流程运行中进行身份验证。
          #当您启用 GitHub Actions 时，GitHub 在您的仓库中安装 GitHub 应用程序。
          #GITHUB_TOKEN 密码是一种 GitHub 应用程序 安装访问令牌。
          #您可以使用安装访问令牌代表仓库中安装的 GitHub 应用程序 进行身份验证。
          #令牌的权限仅限于包含您的工作流程的仓库。 更多信息请参阅“GITHUB_TOKEN 的权限”。
          #在每个作业开始之前， GitHub 将为作业提取安装访问令牌。 令牌在作业完成后过期。
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          draft: false
          prerelease: false
      # 获取apk版本号
      - name: Get Version Name
        uses: actions/github-script@v3
        id: get-version
        with:
          script: |
            const str=process.env.GITHUB_REF;
            return str.substring(str.indexOf("v"));
          result-encoding: string
      - name: Test1
        run: ls -l app/build/outputs/apk/release/
      - name: Test2
        run: ls -l app/build/outputs/bundle/release/
      - name: Release
        uses: softprops/action-gh-release@v2
        if: startsWith(github.ref, 'refs/tags/')
        with:
          token: ${{ secrets.TOKEN }}
          files: |
            app/build/outputs/apk/release/*.apk
            app/build/outputs/bundle/release/*.aab
      # 存档打包的文件
      - name: Archive Build Folder
        uses: actions/upload-artifact@v4
        with:
          # Name of the artifact to upload.
          # Optional. Default is 'artifact'
          name: build
          # A file, directory or wildcard pattern that describes what to upload
          # Required.
          path: app/build/
          # The desired behavior if no files are found using the provided path.
          # Available Options:
          #   warn: Output a warning but do not fail the action
          #   error: Fail the action with an error message
          #   ignore: Do not output any warnings or errors, the action does not fail
          # Optional. Default is 'warn'
          if-no-files-found: warn

          # Duration after which artifact will expire in days. 0 means using default retention.
          # Minimum 1 day.
          # Maximum 90 days unless changed from the repository settings page.
          # Optional. Defaults to repository settings.
          retention-days: 90
          # The level of compression for Zlib to be applied to the artifact archive.
          # The value can range from 0 to 9.
          # For large files that are not easily compressed, a value of 0 is recommended for significantly faster uploads.
          # Optional. Default is '6'
          compression-level: 6
          # If true, an artifact with a matching name will be deleted before a new one is uploaded.
          # If false, the action will fail if an artifact for the given name already exists.
          # Does not fail if the artifact does not exist.
          # Optional. Default is 'false'
          overwrite: false
          # Whether to include hidden files in the provided path in the artifact
          # The file contents of any hidden files in the path should be validated before
          # enabled this to avoid uploading sensitive information.
          # Optional. Default is 'false'
          include-hidden-files: false